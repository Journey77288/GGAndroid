Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
buildscript {

    ext.kotlin_version = '1.3.70'
    ext.objectbox_version = '2.5.1'
    ext.buildToolsVersion = '3.6.3'

    gradle.startParameter.setOffline(false) // 是否离线模式
    repositories {
        google()
        mavenCentral()
        mavenLocal()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven { url 'https://oss.jfrog.org/libs-snapshot' }
        maven { url "https://dl.bintray.com/thelasterstar/maven/" }
        maven { url 'https://jitpack.io' }
        maven {
            url "https://mvnrepository.com/artifact/org.robolectric/robolectric"
        }
        maven {
            url "https://repo.maven.apache.org/maven2/"
        }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$buildToolsVersion"
        classpath "io.objectbox:objectbox-gradle-plugin:$objectbox_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        mavenLocal()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven { url 'https://oss.jfrog.org/libs-snapshot' }
        maven { url properties.getProperty("sdk.dir") + "/extras/android/m2repository/" }
        maven { url properties.getProperty("sdk.dir") + "/extras/google/m2repository/" }
        maven { url 'https://jitpack.io' }
        maven { url "https://dl.bintray.com/thelasterstar/maven/" }
        maven {
            url "https://mvnrepository.com/artifact/org.robolectric/robolectric"
        }
        maven {
            url "https://repo.maven.apache.org/maven2/"
        }
        /**
         * aar文件目录配置
         */
        flatDir {
            dirs project(':core:service:open:open-alipay').file('libs')
            dirs project(':core:service:open:open-line').file('libs')
            dirs project(':core:service:pay:pay-alipay').file('libs')
        }

    }
}

/**
 * 编译项目时，执行清除Project的output文件
 */
task clean(type: Delete) {
    delete rootProject.buildDir
}

/**
 * 查看依赖树任务命令
 * 终端执行：./gradlew allDeps 即可查看全部依赖关系
 */
subprojects {
    task allDeps(type: DependencyReportTask) {}
}
