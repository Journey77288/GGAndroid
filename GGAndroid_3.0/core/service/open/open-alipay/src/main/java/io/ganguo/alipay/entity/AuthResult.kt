package io.ganguo.alipay.entityimport android.text.TextUtilsclass AuthResult(rawResult: Map<String, String>?, removeBrackets: Boolean) {    /**     * @return the resultStatus     */    var resultStatus: String? = null        private set    /**     * @return the result     */    var result: String? = null        private set    /**     * @return the memo     */    var memo: String? = null        private set    /**     * @return the resultCode     */    var resultCode: String? = null        private set    /**     * @return the authCode     */    var authCode: String? = null        private set    /**     * @return the alipayOpenId     */    var alipayOpenId: String? = null        private set    init {        if (rawResult != null) {            for (key in rawResult.keys) {                if (TextUtils.equals(key, "resultStatus")) {                    resultStatus = rawResult[key]                } else if (TextUtils.equals(key, "result")) {                    result = rawResult[key]                } else if (TextUtils.equals(key, "memo")) {                    memo = rawResult[key]                }            }            val resultValue = result!!.split("&".toRegex()).dropLastWhile { it.isEmpty() }.toTypedArray()            for (value in resultValue) {                if (value.startsWith("alipay_open_id")) {                    alipayOpenId = removeBrackets(getValue("alipay_open_id=", value), removeBrackets)                    continue                }                if (value.startsWith("auth_code")) {                    authCode = removeBrackets(getValue("auth_code=", value), removeBrackets)                    continue                }                if (value.startsWith("result_code")) {                    resultCode = removeBrackets(getValue("result_code=", value), removeBrackets)                    continue                }            }        }    }    private fun removeBrackets(str: String, remove: Boolean): String? {        var result = str        if (remove) {            if (!TextUtils.isEmpty(result)) {                if (result.startsWith("\"")) {                    result = result.replaceFirst("\"".toRegex(), "")                }                if (result.endsWith("\"")) {                    result = result.substring(0, result.length - 1)                }            }        }        return result    }    override fun toString(): String {        return "authCode={$authCode}; resultStatus={$resultStatus}; memo={$memo}; result={$result}"    }    private fun getValue(header: String, data: String): String {        return data.substring(header.length, data.length)    }}